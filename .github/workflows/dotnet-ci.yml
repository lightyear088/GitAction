name: .NET CI

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_test:
    runs-on: windows-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # 3️⃣ Restore dependencies
      - name: Restore dependencies
        run: dotnet restore GitActionRep.sln

      # 4️⃣ Build solution
      - name: Build solution
        run: dotnet build GitActionRep.sln --configuration Release

      # 5️⃣ Run NUnit tests with coverage
      - name: Run NUnit tests with coverage
        run: |
          dotnet add ./GitActionTests/GitActionTests.csproj package coverlet.collector
          dotnet test ./GitActionTests/GitActionTests.csproj `
            --logger "trx;LogFileName=TestResults.trx" `
            --results-directory ./TestResults `
            /p:CollectCoverage=true `
            /p:CoverletOutput=TestResults/coverage.opencover.xml `
            /p:CoverletOutputFormat=opencover

      # 6️⃣ Install ReportGenerator
      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      # 7️⃣ Generate HTML report with coverage
      - name: Generate HTML report
        run: |
          mkdir TestResultsHtml
          reportgenerator "-reports:TestResults/coverage.opencover.xml" "-targetdir:TestResultsHtml" -reporttypes:Html

      # 8️⃣ Upload HTML report
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: TestReportHtml
          path: TestResultsHtml

      # 9️⃣ Upload source code if tests succeeded
      - name: Upload source code
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: SourceCode
          path: GitAction/
